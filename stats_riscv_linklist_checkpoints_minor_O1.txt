
---------- Begin Simulation Statistics ----------
simSeconds                                   0.002292                       # Number of seconds simulated (Second)
simTicks                                   2291588800                       # Number of ticks simulated (Tick)
finalTick                                  2291588800                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.35                       # Real time elapsed on the host (Second)
hostTickRate                               6600356360                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158872                       # Number of bytes of host memory used (Byte)
simInsts                                       183808                       # Number of instructions simulated (Count)
simOps                                         183814                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   529318                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     529331                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq        79353                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp        79355                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq        14635                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp        14635                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::LoadLockedReq            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondReq            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondResp            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq           14                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp           14                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port       100485                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total       100485                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        87530                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total        87530                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total       188015                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port      3215488                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total      3215488                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port       236264                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total       236264                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      3451752                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        94008                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        94008    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        94008                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED   2291588800                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED   2291588800                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     21732000                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy     22884200                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy     16387350                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples     50243.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples     25570.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.003159913300                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           25                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           25                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState         165919                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           375                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  79356                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                 14652                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                79356                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts               14652                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ              3974                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts            14221                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.47                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.38                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0             7280                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1             5012                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2             3660                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3            13161                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            50243                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0              20                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1            3004                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2              30                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3           11598                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              48302                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1              25008                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2               2072                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           25                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean  2957.880000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean  1030.081082                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev  9211.928930                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-2047           24     96.00%     96.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::45056-47103            1      4.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           25                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           25                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           25    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           25                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ             254336                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            3352784                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           98932                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1463082731.07286954                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         43171794.17179906                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap               2291587600                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 24376.52                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst      3215552                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data       111404                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data         3089                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1403197641.740961551666                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 48614306.371195390821                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 1347973.074401480611                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst        50243                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data        29113                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data        14652                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst   1148133150                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data    678316650                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data  58900306000                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     22851.60                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     23299.44                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data   4019949.90                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst      3215488                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data       137232                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      3352720                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst      3215488                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total      3215488                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data        98832                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total        98832                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst        50242                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data        29113                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        79355                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data        14638                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total        14638                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1403169714                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data     59885089                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1463054803                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1403169714                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1403169714                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     43128156                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     43128156                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1403169714                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data    103013246                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1506182959                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           75382                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            400                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0        18800                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1691                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         2603                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          622                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          395                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          179                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6         5060                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7           15                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8           72                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         7928                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10          288                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         2585                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13        15370                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14        18594                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15         1180                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5           53                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           17                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8           15                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9           45                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           45                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           96                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          413037300                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        376910000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat    1826449800                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            5479.26                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      24229.26                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits          66736                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           369                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        88.53                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        92.25                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         8673                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   558.990891                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   326.935523                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   433.220856                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127         2404     27.72%     27.72% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255          996     11.48%     39.20% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383          706      8.14%     47.34% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511          113      1.30%     48.65% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639          334      3.85%     52.50% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767          255      2.94%     55.44% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           48      0.55%     55.99% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023          141      1.63%     57.62% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         3676     42.38%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         8673                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead          4824448                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         25600                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2105.285206                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW          11.171289                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              16.53                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          16.45                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.09                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          88.55                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED   2291588800                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy     15358140                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy      8151660                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy    209666100                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy       370620                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 180704160.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy    681888720                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy    305748480                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy   1401887880                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   611.753679                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE    786049650                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF     76440000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT   1429099150                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy     46595640                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy     24762375                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy    328561380                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy      1717380                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 180704160.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy   1018869870                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy     21974880                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy   1623185685                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   708.323276                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE     46558900                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF     76440000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT   2168589900                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED   2291588800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles        11457944                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             62.336482                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.016042                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups        38900                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted        24151                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect          467                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups        14866                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates          400                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits        14136                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.950895                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed         4995                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            3                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups         1791                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits         1748                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses           43                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted           24                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts       183808                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps       183814                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    62.336482                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.016042                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass           33      0.02%      0.02% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu       134160     72.99%     73.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult         1004      0.55%     73.55% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            3      0.00%     73.55% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd         1000      0.54%     74.10% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp            0      0.00%     74.10% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt         1000      0.54%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead        29971     16.31%     90.95% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite        12630      6.87%     97.82% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead         2000      1.09%     98.90% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite         2013      1.10%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total       183814                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps         1335                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions       136172                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions         2000                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions        33058                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions        15152                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   2291588800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   2291588800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON   2291588800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts       183808                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps       183814                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls           12                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               2                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   inf                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc              0.000000                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          inf                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc     0.000000                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   2291588800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   2291588800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON   2291588800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles       10995211                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles         462733                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              2                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.027278                       # Number of seconds simulated (Second)
simTicks                                  27277847800                       # Number of ticks simulated (Tick)
finalTick                                 29569436600                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      3.91                       # Real time elapsed on the host (Second)
hostTickRate                               6970844030                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158872                       # Number of bytes of host memory used (Byte)
simInsts                                      2029646                       # Number of instructions simulated (Count)
simOps                                        2029652                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   518669                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     518670                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq      1156407                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp      1156407                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq        46007                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp        46007                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq          993                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp          993                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port      1170960                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total      1170960                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port      1235854                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total      1235854                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total      2406814                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port     37470720                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total     37470720                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port      4870437                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total      4870437                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total     42341157                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples      1203407                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0      1203407    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total      1203407                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED  27277847800                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED  27277847800                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy    250081400                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy    265131400                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy    284794750                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples    585480.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples    556676.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.005026933850                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds          214                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds          214                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState        2330704                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState          3210                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                1156407                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                 47000                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts              1156407                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts               47000                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ             17672                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts            43579                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.63                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.26                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0             2995                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1             2000                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2             8993                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3           556939                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6           585480                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               7                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2            1993                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3           45000                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0             660578                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1             475420                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2               2737                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17               168                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18               211                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19               214                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20               214                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21               214                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22               214                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23               214                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24               215                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25               216                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26               215                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27               216                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28               214                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29               248                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30               214                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31               214                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32               220                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples          214                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean  5326.602804                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean  1819.822198                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev  6525.152919                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-1023          113     52.80%     52.80% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::1024-2047            1      0.47%     53.27% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::2048-3071            4      1.87%     55.14% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::3072-4095           10      4.67%     59.81% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::4096-5119            7      3.27%     63.08% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::5120-6143            9      4.21%     67.29% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::6144-7167            2      0.93%     68.22% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::7168-8191           10      4.67%     72.90% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::8192-9215            6      2.80%     75.70% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::9216-10239            2      0.93%     76.64% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::10240-11263            2      0.93%     77.57% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::11264-12287            6      2.80%     80.37% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::12288-13311            3      1.40%     81.78% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::13312-14335            6      2.80%     84.58% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::14336-15359            8      3.74%     88.32% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::15360-16383            6      2.80%     91.12% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16384-17407            2      0.93%     92.06% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::17408-18431            6      2.80%     94.86% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18432-19455            3      1.40%     96.26% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::19456-20479            4      1.87%     98.13% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::20480-21503            2      0.93%     99.07% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::22528-23551            1      0.47%     99.53% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::25600-26623            1      0.47%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total          214                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples          214                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16          214    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total          214                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ            1131008                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys           41969199                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys          367986                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1538581757.17220616                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         13490287.16261112                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap              27277847800                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 22667.18                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst     37470720                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data      4361165                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data        26826                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1373668490.077871799469                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 159879365.556105196476                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 983435.357389155892                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst       585480                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data       570927                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data        47000                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst  13790048400                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data  13307186600                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data 701107426950                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     23553.41                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     23308.04                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data  14917179.30                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst     37470720                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data      4498479                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total     41969199                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst     37470720                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total     37470720                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data       364014                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total       364014                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst       585480                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data       570927                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total      1156407                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data        46007                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total        46007                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1373668490                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data    164913267                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1538581757                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1373668490                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1373668490                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     13344675                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     13344675                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1373668490                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data    178257942                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1551926432                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts         1138735                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts           3424                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0       546220                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1        38014                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2        28147                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5        13680                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6         1000                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8         5988                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9        25444                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10         7998                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11        11585                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         1024                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13       201514                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14       162674                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15        95447                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          349                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          105                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9          603                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10          108                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11          251                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12           93                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13          842                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14          592                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15          480                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat         5745953750                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat       5693675000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat   27097235000                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            5045.91                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      23795.91                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits        1010364                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits          3039                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        88.73                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        88.76                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples       128751                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   567.719086                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   321.378555                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   437.934582                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127        42167     32.75%     32.75% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255         8761      6.80%     39.56% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383         5865      4.56%     44.11% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511         4166      3.24%     47.35% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639         3351      2.60%     49.95% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767         3725      2.89%     52.84% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895         2984      2.32%     55.16% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023         3364      2.61%     57.77% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151        54368     42.23%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total       128751                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead         72879040                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten        219136                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2671.729842                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW           8.033478                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              20.94                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          20.87                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.06                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          88.73                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED  27277847800                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy    619709160                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy    329375640                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy   4477215540                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      2375100                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 2153083920.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy  11784839490                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy    550618080                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy  19917216930                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   730.160864                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE    415651750                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF    910780000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT  25951416050                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy    299608680                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy    159234405                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy   3653352360                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy     15498180                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 2153083920.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy  12340074210                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy     83052000                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy  18703903755                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   685.681066                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE    115026900                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF    910780000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT  26252040900                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED  27277847800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles       136389239                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             73.890146                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.013534                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups       568170                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted       548073                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect         1055                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups       277566                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates           60                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits       277528                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.999863                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed         7042                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            4                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts      1845838                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps      1845838                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    73.890146                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.013534                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu       980377     53.11%     53.11% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult            0      0.00%     53.11% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            0      0.00%     53.11% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd            0      0.00%     53.11% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp       247499     13.41%     66.52% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.52% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.52% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.52% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.52% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc         1000      0.05%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.58% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead       321448     17.41%     83.99% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite        44015      2.38%     86.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead       249499     13.52%     99.89% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite         2000      0.11%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total      1845838                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps         4014                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions       977817                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions       249544                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions       572276                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions        46112                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED  27277847800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED  27277847800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON  27277847800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts      1845838                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps      1845838                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               0                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   nan                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc                   nan                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          nan                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc          nan                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate          nan                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate          nan                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate          nan                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED  27277847800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED  27277847800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON  27277847800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles      130664589                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles        5724650                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              0                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.001453                       # Number of seconds simulated (Second)
simTicks                                   1453426800                       # Number of ticks simulated (Tick)
finalTick                                 31022863400                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.20                       # Real time elapsed on the host (Second)
hostTickRate                               7409551017                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158872                       # Number of bytes of host memory used (Byte)
simInsts                                      2137429                       # Number of instructions simulated (Count)
simOps                                        2137446                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                 10893885                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                   10893815                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq        47805                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp        47810                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq         3783                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp         3783                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::LoadLockedReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondResp            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port        62958                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total        62958                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        40248                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total        40248                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total       103206                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port      2014656                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total      2014656                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        96372                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total        96372                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      2111028                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        51603                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        51603    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        51603                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED   1453426800                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED   1453426800                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     11079200                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy     14325700                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy      8576700                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples     31479.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples     16309.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.002944184150                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            2                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            2                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState          99657                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState            30                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  47810                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                  3793                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                47810                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                3793                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                53                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts             3762                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.51                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 29.95                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0             7169                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                1                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2             3580                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3             5581                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            31479                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               3                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               1                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2              29                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3            3760                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              29821                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1              16986                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                950                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples            2                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean 23882.500000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean  4699.804890                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev 33114.517670                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-2047            1     50.00%     50.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::47104-49151            1     50.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total            2                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples            2                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16            2    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total            2                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ               3392                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            2080795                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           30201                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1431647606.88326383                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         20779168.23881327                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap               1453427200                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 28165.56                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst      2014656                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data        65731                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data          248                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1386142047.194946527481                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 45224843.796742983162                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 170631.228211837035                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst        31479                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data        16331                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data         3793                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst    744414500                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data    464164100                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data  23558303800                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     23647.97                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     28422.27                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data   6210994.94                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst      2014656                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data        66139                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      2080795                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst      2014656                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total      2014656                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data        30169                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total        30169                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst        31479                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data        16331                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        47810                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data         3788                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total         3788                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1386142047                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data     45505560                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1431647607                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1386142047                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1386142047                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     20757151                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     20757151                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1386142047                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data     66262711                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1452404758                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           47757                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts             32                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0         1336                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1434                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         1396                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          330                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5           33                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           48                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8          177                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         5415                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10           48                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            9                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         2461                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13        15362                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14        18528                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15         1180                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            8                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            8                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          313134850                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        238785000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat    1208578600                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            6556.84                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      25306.84                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits          41147                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits            28                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        86.16                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        87.50                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         6617                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   462.701526                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   251.732580                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   423.588375                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127         2342     35.39%     35.39% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255          895     13.53%     48.92% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383          628      9.49%     58.41% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           48      0.73%     59.14% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639          248      3.75%     62.88% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767          141      2.13%     65.01% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           57      0.86%     65.88% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023          148      2.24%     68.11% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         2110     31.89%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         6617                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead          3056448                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten          2048                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2102.925307                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW           1.409084                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              16.44                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          16.43                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.01                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          86.16                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED   1453426800                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy      2598960                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy      1388970                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy     32679780                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy        10440                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 114937680.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy    300852840                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy    304765920                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy    757234590                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   520.999468                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE    786641300                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF     48620000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT    618165500                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy     44625000                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy     23722545                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy    308305200                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       156600                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 114937680.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy    660009840                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      2317920                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy   1154074785                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   794.037089                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF     48620000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT   1404806800                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED   1453426800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles         7267134                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             67.423750                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.014832                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups        28139                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted        19974                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect          125                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups         9989                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates           95                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits         9801                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.981179                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed         1834                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            2                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups         1774                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits         1755                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses           19                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted            7                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts       107783                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps       107794                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    67.423750                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.014832                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass           30      0.03%      0.03% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu        87687     81.35%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead        16289     15.11%     96.49% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite         3788      3.51%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total       107794                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps          316                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions        85864                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions        16631                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions         3952                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1453426800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1453426800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON   1453426800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts       107783                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps       107794                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls            1                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               0                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   nan                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc                   nan                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          nan                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc          nan                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate          nan                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate          nan                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate          nan                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1453426800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1453426800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON   1453426800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles        7004294                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles         262840                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              0                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------
