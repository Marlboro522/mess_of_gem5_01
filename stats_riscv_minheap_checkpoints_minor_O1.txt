
---------- Begin Simulation Statistics ----------
simSeconds                                   0.002292                       # Number of seconds simulated (Second)
simTicks                                   2292324600                       # Number of ticks simulated (Tick)
finalTick                                  2292324600                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.34                       # Real time elapsed on the host (Second)
hostTickRate                               6834937485                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158876                       # Number of bytes of host memory used (Byte)
simInsts                                       184135                       # Number of instructions simulated (Count)
simOps                                         184141                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   548926                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     548939                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq        79654                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp        79656                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq        14663                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp        14663                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::LoadLockedReq            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondReq            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondResp            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq           14                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp           14                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port       100967                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total       100967                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        87706                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total        87706                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total       188673                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port      3230912                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total      3230912                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port       236854                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total       236854                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      3467766                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        94337                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        94337    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        94337                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED   2292324600                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED   2292324600                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     21803400                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy     22932350                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy     16495250                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples     50484.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples     25632.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.003320425300                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           25                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           25                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState         166560                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           375                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  79657                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                 14680                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                79657                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts               14680                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ              3971                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts            14250                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.46                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 24.48                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0             7288                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1             5013                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2             3671                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3            13201                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            50484                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0              20                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1            3004                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2              32                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3           11624                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              49341                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1              24270                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2               2075                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                24                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           25                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean  2972.120000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean  1090.928070                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev  9182.564966                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-2047           24     96.00%     96.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::45056-47103            1      4.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           25                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           25                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           25    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           25                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ             254144                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            3368582                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           99148                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1469504798.75319576                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         43252164.20048016                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap               2292323400                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 24299.30                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst      3230976                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data       111805                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data         3082                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1409475778.430332422256                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 48773633.542125754058                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 1344486.727577761048                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst        50484                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data        29173                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data        14680                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst   1152579000                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data    679489350                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data  54625918900                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     22830.58                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     23291.72                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data   3721111.64                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst      3230912                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data       137606                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      3368518                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst      3230912                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total      3230912                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data        99048                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total        99048                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst        50483                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data        29173                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        79656                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data        14666                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total        14666                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1409447859                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data     60029020                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1469476879                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1409447859                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1409447859                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     43208540                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     43208540                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1409447859                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data    103237561                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1512685420                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           75686                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            400                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0        18882                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1781                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         2650                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          632                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          386                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          194                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6         5059                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7           16                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8           74                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         7911                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10          338                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         2541                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13        17143                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14        16837                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15         1240                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5           57                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           17                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8           17                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9           45                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           37                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           98                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          412955850                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        378430000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat    1832068350                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            5456.17                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      24206.17                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits          66995                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           369                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        88.52                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        92.25                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         8718                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   558.373939                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   329.911595                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   429.278396                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127         2364     27.12%     27.12% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255          840      9.64%     36.75% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383          876     10.05%     46.80% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511          141      1.62%     48.42% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639          369      4.23%     52.65% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767          304      3.49%     56.14% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           65      0.75%     56.88% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023          109      1.25%     58.13% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         3650     41.87%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         8718                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead          4843904                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         25600                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2113.096897                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW          11.167703                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              16.60                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          16.51                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.09                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          88.54                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED   2292324600                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy     16100700                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy      8546340                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy    211344000                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy       391500                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 180704160.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy    681885870                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy    306033120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy   1405005690                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   612.917425                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE    786746700                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF     76440000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT   1429137900                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy     46174380                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy     24538470                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy    329054040                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy      1696500                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 180704160.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy   1014153690                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy     26228640                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy   1622549880                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   707.818552                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE     57416350                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF     76440000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT   2158468250                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED   2292324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles        11461623                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             62.245760                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.016065                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups        38937                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted        24174                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect          477                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups        14897                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates          409                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits        14178                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.951735                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed         4988                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            7                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups         1795                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits         1750                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses           45                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted           24                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts       184135                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps       184141                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    62.245760                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.016065                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass           33      0.02%      0.02% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu       134403     72.99%     73.01% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult         1004      0.55%     73.55% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            3      0.00%     73.55% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd         1000      0.54%     74.10% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp            0      0.00%     74.10% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt         1000      0.54%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead        30027     16.31%     90.95% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite        12658      6.87%     97.82% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead         2000      1.09%     98.91% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite         2013      1.09%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total       184141                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps         1375                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions       136399                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions         2000                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions        33094                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions        15198                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   2292324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   2292324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON   2292324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts       184135                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps       184141                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls           12                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               2                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   inf                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc              0.000000                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          inf                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc     0.000000                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   2292324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   2292324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON   2292324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles       11003773                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles         457850                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              2                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000873                       # Number of seconds simulated (Second)
simTicks                                    872958400                       # Number of ticks simulated (Tick)
finalTick                                  3165283000                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.12                       # Real time elapsed on the host (Second)
hostTickRate                               7429479033                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158876                       # Number of bytes of host memory used (Byte)
simInsts                                       226144                       # Number of instructions simulated (Count)
simOps                                         226150                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  1923982                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    1923989                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq        31011                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp        31011                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq         6000                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp         6000                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port        40020                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total        40020                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        34002                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total        34002                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total        74022                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port      1280640                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total      1280640                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port       120008                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total       120008                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      1400648                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        37011                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        37011    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        37011                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED    872958400                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED    872958400                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy      8602200                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy      9072100                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy      6487750                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples     20010.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples      9091.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.001180908950                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            8                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            8                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState          64158                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           120                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  31011                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                  6000                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                31011                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                6000                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ              2040                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts             5870                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.34                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 27.22                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2             3000                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3             8001                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            20010                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2            1000                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3            5000                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              21559                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1               7412                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples            8                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean  3539.750000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean  2530.800406                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev  4431.846141                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::1536-2047            6     75.00%     75.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::2048-2559            1     12.50%     87.50% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::14336-14847            1     12.50%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total            8                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples            8                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16            8    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total            8                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ             130560                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            1356648                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           44000                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1554080927.56768250                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         50403318.18789990                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                872958400                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 23586.46                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst      1280640                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data        63668                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data         1002                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1467011486.458003044128                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 72933601.417891159654                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 1147821.018733538687                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst        20010                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data        11001                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data         6000                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst    423622300                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data    214075250                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data  22608095100                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     21170.53                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     19459.62                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data   3768015.85                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst      1280640                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data        76008                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      1356648                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst      1280640                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total      1280640                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data        44000                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total        44000                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst        20010                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data        11001                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        31011                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data         6000                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total         6000                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1467011486                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data     87069441                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1554080928                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1467011486                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1467011486                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     50403318                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     50403318                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1467011486                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data    137472759                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1604484246                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           28971                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            128                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0        20010                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         1000                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11         5929                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         2030                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           61                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12           64                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           94491300                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        144855000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat     637697550                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            3261.58                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      22011.58                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits          26987                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           120                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        93.15                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        93.75                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         1994                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   933.969910                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   864.631323                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   235.463913                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127           15      0.75%      0.75% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255          110      5.52%      6.27% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            4      0.20%      6.47% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           48      2.41%      8.88% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639           12      0.60%      9.48% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767           28      1.40%     10.88% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           63      3.16%     14.04% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023           54      2.71%     16.75% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         1660     83.25%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         1994                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead          1854144                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten          8192                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2123.977500                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW           9.384181                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              16.67                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          16.59                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.07                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          93.15                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED    872958400                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy      9610440                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy      5115660                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy    142871400                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy         5220                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 68839680.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy    377953890                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy     16939200                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy    621335490                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   711.758418                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE     24279250                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF     29120000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT    819559150                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy      4612440                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy      2451570                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy     63981540                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       662940                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 68839680.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy    382554360                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy     13065120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy    536167650                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   614.196106                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE     28709050                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF     29120000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT    815129350                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED    872958400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles         4364792                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi            103.901354                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.009625                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups         9028                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted         4007                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect           11                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups         7020                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates            9                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits         6993                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.996154                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed         2002                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            1                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts        42009                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps        42009                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi   103.901354                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.009625                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu        24009     57.15%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     57.15% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead        11000     26.18%     83.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite         6000     14.28%     97.62% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead         1000      2.38%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total        42009                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps           29                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions        23095                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions            1                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions        12032                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions         6012                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED    872958400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED    872958400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON    872958400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts        42009                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps        42009                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               0                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   nan                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc                   nan                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          nan                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc          nan                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate          nan                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate          nan                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate          nan                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED    872958400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED    872958400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON    872958400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles        4205798                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles         158994                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              0                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.001458                       # Number of seconds simulated (Second)
simTicks                                   1457866200                       # Number of ticks simulated (Tick)
finalTick                                  4623149200                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.19                       # Real time elapsed on the host (Second)
hostTickRate                               7683216957                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158876                       # Number of bytes of host memory used (Byte)
simInsts                                       334220                       # Number of instructions simulated (Count)
simOps                                         334237                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  1760904                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    1760968                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq        47964                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp        47969                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq         3816                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp         3816                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::LoadLockedReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondResp            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port        63144                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total        63144                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        40446                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total        40446                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total       103590                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port      2020608                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total      2020608                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        97052                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total        97052                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      2117660                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        51795                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        51795    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        51795                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED   1457866200                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED   1457866200                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     11124200                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy     14356350                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy      8636500                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples     31572.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples     16382.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.002982682150                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            3                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            3                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState         100017                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState            45                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  47969                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                  3826                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                47969                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                3826                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                53                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts             3788                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.51                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 27.94                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0             7177                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                3                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2             3586                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3             5631                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            31572                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               3                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               3                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2              31                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3            3789                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              29954                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1              17015                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                947                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples            3                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean        16567                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean  3079.514744                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev 26679.111211                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-2047            2     66.67%     66.67% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::47104-49151            1     33.33%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total            3                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples            3                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16            3    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total            3                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ               3392                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            2087183                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           30445                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1431669792.46792340                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         20883260.75465636                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap               1457866200                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 28146.85                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst      2020608                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data        66173                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data          352                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1386003736.145333528519                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 45390310.852943845093                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 241448.769441255979                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst        31572                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data        16397                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data         3826                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst    746698650                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data    464498500                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data  21150539450                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     23650.66                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     28328.26                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data   5528107.54                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst      2020608                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data        66575                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      2087183                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst      2020608                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total      2020608                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data        30413                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total        30413                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst        31572                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data        16397                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        47969                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data         3821                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total         3821                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1386003736                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data     45666056                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1431669792                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1386003736                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1386003736                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     20861311                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     20861311                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1386003736                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data     66527367                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1452531103                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           47916                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts             48                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0         1299                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1484                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         1402                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          346                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5           38                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           50                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8          176                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         5446                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10           55                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11           18                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         2443                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13        17130                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14        16789                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15         1240                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            4                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            4                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           32                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          312772150                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        239580000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat    1211197150                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            6527.51                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      25277.51                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits          41368                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits            45                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        86.33                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        93.75                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         6546                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   468.727162                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   259.888038                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   418.832998                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127         2242     34.25%     34.25% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255          678     10.36%     44.61% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383          806     12.31%     56.92% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           78      1.19%     58.11% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639          283      4.32%     62.44% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767          186      2.84%     65.28% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           58      0.89%     66.16% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023          140      2.14%     68.30% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         2075     31.70%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         6546                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead          3066624                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten          3072                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2103.501679                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW           2.107189                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              16.45                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          16.43                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.02                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          86.34                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED   1457866200                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy      2663220                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy      1404150                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy     32979660                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy        31320                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 114937680.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy    303682890                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy    304087680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy    759786600                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   521.163465                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE    784817450                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF     48620000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT    624428750                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy     44110920                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy     23437920                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy    309140580                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       219240                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 114937680.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy    661858350                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      2466240                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy   1156170930                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   793.056955                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE       316600                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF     48620000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT   1408929600                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED   1457866200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles         7289331                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             67.446343                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.014827                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups        28219                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted        20020                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect          128                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups        10018                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates          101                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits         9815                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.979736                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed         1845                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            1                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups         1776                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits         1757                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses           19                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted            7                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts       108076                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps       108087                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    67.446343                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.014827                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass           30      0.03%      0.03% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu        87888     81.31%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     81.34% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead        16348     15.12%     96.46% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite         3821      3.54%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total       108087                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps          338                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions        86125                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions        16743                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions         3997                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1457866200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1457866200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON   1457866200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts       108076                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps       108087                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls            1                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               0                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   nan                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc                   nan                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          nan                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc          nan                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate          nan                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate          nan                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate          nan                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1457866200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1457866200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON   1457866200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles        7026634                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles         262697                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              0                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------
