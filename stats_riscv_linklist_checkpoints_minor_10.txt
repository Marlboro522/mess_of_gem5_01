
---------- Begin Simulation Statistics ----------
simSeconds                                   0.001541                       # Number of seconds simulated (Second)
simTicks                                   1540878200                       # Number of ticks simulated (Tick)
finalTick                                  1540878200                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.22                       # Real time elapsed on the host (Second)
hostTickRate                               6962621095                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158876                       # Number of bytes of host memory used (Byte)
simInsts                                       113770                       # Number of instructions simulated (Count)
simOps                                         113776                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   513943                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     513963                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq        50714                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp        50716                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq         4750                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp         4750                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::LoadLockedReq            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondReq            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondResp            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq           14                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp           14                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port        66779                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total        66779                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        44188                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total        44188                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total       110967                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port      2136896                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total      2136896                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port       110128                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total       110128                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      2247024                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        55484                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        55484    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        55484                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED   1540878200                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED   1540878200                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     12050200                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy     15268450                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy      9231600                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples     33390.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples     17287.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.002954029050                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            8                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            8                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState         106141                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           121                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  50717                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                  4767                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                50717                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                4767                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ               193                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts             4614                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.51                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 24.10                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0             7284                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1               64                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2             3709                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3             6270                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            33390                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0              20                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1              34                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2              43                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3            4670                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              31795                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1              17740                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                989                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                10                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples            8                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean  6233.375000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean   539.561598                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev 16682.504179                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-2047            7     87.50%     87.50% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::47104-49151            1     12.50%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total            8                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples            8                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16            8    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total            8                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ              12352                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            2209368                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           37620                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1433836886.00435781                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         24414648.73732395                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap               1540877000                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 27771.56                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst      2136960                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data        71094                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data          965                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1386845501.480908870697                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 46138624.065159730613                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 626266.242198766908                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst        33390                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data        17327                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data         4767                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst    784339700                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data    493793800                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data  22189884700                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     23490.26                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     28498.52                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data   4654895.05                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst      2136896                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data        72408                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      2209304                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst      2136896                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total      2136896                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data        37520                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total        37520                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst        33389                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data        17327                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        50716                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data         4753                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total         4753                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1386803967                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data     46991385                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1433795351                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1386803967                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1386803967                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     24349751                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     24349751                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1386803967                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data     71341135                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1458145102                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           50524                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            128                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0         1638                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1917                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         1698                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          653                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          405                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          175                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6          103                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7           14                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8           71                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         5785                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10          371                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         2510                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13        11835                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14        22089                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15         1260                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5           50                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8           15                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9           19                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           38                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          330808500                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        252620000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat    1278133500                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            6547.55                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      25297.55                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits          43575                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           117                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        86.25                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        91.41                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         6957                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   465.717982                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   258.834191                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   420.488231                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127         2195     31.55%     31.55% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255         1374     19.75%     51.30% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383          424      6.09%     57.40% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511          104      1.49%     58.89% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639          254      3.65%     62.54% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767          162      2.33%     64.87% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           98      1.41%     66.28% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023          164      2.36%     68.64% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         2182     31.36%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         6957                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead          3233536                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten          8192                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2098.502010                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW           5.316449                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              16.44                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          16.39                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.04                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          86.26                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED   1540878200                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy      4448220                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy      2352900                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy     47145420                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy       292320                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 121084080.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy    342224580                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy    303508320                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy    821055840                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   532.849280                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE    782823000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF     51220000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT    706835200                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy     45246180                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy     24045120                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy    313595940                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       375840                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 121084080.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy    692483880                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      8553120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy   1205384160                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   782.270889                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE     15612650                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF     51220000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT   1474045550                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED   1540878200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles         7704391                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             67.719003                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.014767                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups        29946                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted        21139                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect          462                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups        10899                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates          396                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits        10187                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.934673                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed         2019                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            5                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups         1790                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits         1748                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses           42                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted           24                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts       113770                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps       113776                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    67.719003                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.014767                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass           33      0.03%      0.03% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu        91713     80.61%     80.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult           14      0.01%     80.65% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            3      0.00%     80.65% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd           10      0.01%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt           10      0.01%     80.67% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     80.67% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     80.67% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     80.67% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc           10      0.01%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     80.68% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead        17208     15.12%     95.80% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite         4723      4.15%     99.95% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead           20      0.02%     99.97% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite           32      0.03%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total       113776                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps         1315                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions        92554                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions           38                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions        18343                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions         5283                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1540878200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1540878200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON   1540878200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts       113770                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps       113776                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls           12                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               2                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   inf                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc              0.000000                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          inf                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc     0.000000                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1540878200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1540878200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON   1540878200                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles        7417551                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles         286840                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              2                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000054                       # Number of seconds simulated (Second)
simTicks                                     54417600                       # Number of ticks simulated (Tick)
finalTick                                  1595295800                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.02                       # Real time elapsed on the host (Second)
hostTickRate                               2206425433                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158876                       # Number of bytes of host memory used (Byte)
simInsts                                       117943                       # Number of instructions simulated (Count)
simOps                                         117949                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  4776156                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    4775846                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq         2179                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp         2179                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq          551                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp          551                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port         2150                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total         2150                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port         3316                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total         3316                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         5466                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port        68800                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total        68800                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        12235                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total        12235                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total        81035                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples         2733                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0         2733    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total         2733                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     54417600                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     54417600                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       657400                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy       494050                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       614950                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples      1075.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples       928.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.003007468200                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            1                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            1                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           4552                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState            15                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                   2179                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                   554                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                 2179                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                 554                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ               186                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts              544                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.50                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 25.92                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0               25                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1               20                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2              141                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3              918                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6             1075                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               7                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2              35                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3             512                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0               1265                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                694                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                 34                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples            1                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean         2118                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean  2118.000000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev          nan                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::2048-2175            1    100.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total            1                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples            1                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev          nan                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16            1    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total            1                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ              11904                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              76773                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys            4250                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1410811943.19484878                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         78099732.43950486                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 54417600                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 19911.31                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst        68800                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data         6731                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data          118                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1264296845.138337612152                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 123691599.776542887092                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 2168416.100673311390                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst         1075                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data         1104                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data          554                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst     23535550                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data     20855450                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data  13920124500                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     21893.53                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     18890.81                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data  25126578.52                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst        68800                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data         7973                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        76773                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst        68800                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        68800                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data         4238                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total         4238                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst         1075                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data         1104                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total         2179                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data          551                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total          551                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1264296845                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data    146515098                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1410811943                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1264296845                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1264296845                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     77879216                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     77879216                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1264296845                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data    224394314                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1488691159                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts            1993                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts             16                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          408                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          267                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          400                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          127                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           10                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8           47                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9          489                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10           73                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11          172                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            3                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat            7022250                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          9965000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      44391000                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            3523.46                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      22273.46                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits           1837                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits            15                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        92.17                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        93.75                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          151                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   833.271523                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   727.031487                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   299.227225                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            6      3.97%      3.97% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255            3      1.99%      5.96% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            7      4.64%     10.60% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           11      7.28%     17.88% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            9      5.96%     23.84% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            9      5.96%     29.80% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            2      1.32%     31.13% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            8      5.30%     36.42% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           96     63.58%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          151                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead           127552                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten          1024                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2343.947546                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW          18.817441                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              18.46                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          18.31                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.15                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.19                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     54417600                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       671160                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       349140                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      8653680                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy        36540                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 4302480.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy     24682710                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       110880                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     38806590                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   713.125717                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE        96250                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF      1820000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     52501350                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       449820                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       227700                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy      5576340                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy        46980                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 4302480.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy     24527670                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy       241440                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy     35372430                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   650.018193                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE       434500                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF      1820000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     52163100                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     54417600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles          272088                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             65.202013                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.015337                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups          807                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted          542                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect           43                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups          344                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates           37                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits          305                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.886628                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed           95                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            1                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts         4173                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps         4173                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    65.202013                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.015337                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu         2444     58.57%     58.57% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult            0      0.00%     58.57% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            0      0.00%     58.57% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd            0      0.00%     58.57% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp           20      0.48%     59.05% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt            0      0.00%     59.05% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     59.05% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     59.05% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     59.05% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc           10      0.24%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead         1088     26.07%     85.36% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite          531     12.72%     98.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead           60      1.44%     99.52% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite           20      0.48%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total         4173                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps          109                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions         2677                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions           37                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions         1464                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions          633                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED     54417600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED     54417600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON     54417600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts         4173                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps         4173                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               0                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   nan                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc                   nan                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          nan                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc          nan                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate          nan                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate          nan                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate          nan                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED     54417600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED     54417600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON     54417600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles         260816                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles          11272                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              0                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.001447                       # Number of seconds simulated (Second)
simTicks                                   1446861600                       # Number of ticks simulated (Tick)
finalTick                                  3042157400                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.20                       # Real time elapsed on the host (Second)
hostTickRate                               7060926905                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158876                       # Number of bytes of host memory used (Byte)
simInsts                                       225602                       # Number of instructions simulated (Count)
simOps                                         225619                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  1100721                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    1100787                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq        47694                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp        47699                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq         3766                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp         3766                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::LoadLockedReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondResp            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port        62818                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total        62818                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        40132                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total        40132                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total       102950                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port      2010176                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total      2010176                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        95904                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total        95904                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      2106080                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        51475                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        51475    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        51475                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED   1446861600                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED   1446861600                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     11050200                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy     14365600                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy      8549550                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples     31409.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples     16273.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.003021762650                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            1                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            1                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState          99438                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState            15                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  47699                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                  3776                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                47699                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                3776                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                41                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts             3752                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.52                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 29.93                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0             7169                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                4                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2             3573                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3             5544                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            31409                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               3                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               3                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2              29                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3            3741                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              29743                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1              16975                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                940                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples            1                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean        47920                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean 47920.000000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev          nan                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::47104-49151            1    100.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total            1                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples            1                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev          nan                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16            1    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total            1                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ               2624                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            2075995                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           30053                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1434826247.37569928                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         20771164.29104207                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap               1446861600                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 28108.04                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst      2010176                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data        65507                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data          118                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1389335372.505566596985                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 45275235.723997376859                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 81555.830910157543                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst        31409                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data        16290                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data         3776                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst    739714600                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data    470167850                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data  23803026000                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     23551.04                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     28862.36                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data   6303767.48                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst      2010176                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data        65819                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      2075995                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst      2010176                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total      2010176                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data        30021                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total        30021                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst        31409                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data        16290                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        47699                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data         3771                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total         3771                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1389335373                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data     45490875                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1434826247                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1389335373                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1389335373                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     20749047                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     20749047                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1389335373                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data     66239922                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1455575295                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           47658                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts             16                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0         1266                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1416                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         1388                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          372                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5           21                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           48                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8          178                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         5412                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10           45                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         2406                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13        11825                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14        22019                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15         1260                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            9                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          316294950                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        238290000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat    1209882450                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            6636.77                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      25386.77                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits          41027                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits            14                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        86.09                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        87.50                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         6635                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   460.018689                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   255.152827                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   419.152001                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127         2114     31.86%     31.86% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255         1334     20.11%     51.97% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383          400      6.03%     58.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511          106      1.60%     59.59% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639          245      3.69%     63.29% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767          145      2.19%     65.47% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           92      1.39%     66.86% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023          149      2.25%     69.10% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         2050     30.90%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         6635                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead          3050112                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten          1024                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2108.088293                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW           0.707739                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              16.47                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          16.47                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.01                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          86.09                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED   1446861600                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy      2577540                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy      1373790                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy     32208540                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 114323040.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy    296779620                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy    305675040                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy    752937570                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   520.393637                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE    788936050                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF     48360000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT    609565550                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy     44782080                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy     23806035                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy    308069580                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy        83520                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 114323040.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy    657063510                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      2278080                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy   1150405845                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   795.104276                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE        74900                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF     48360000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT   1398426700                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED   1446861600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles         7234308                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             67.196500                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.014882                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups        28045                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted        19876                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect          111                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups         9943                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates           85                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits         9784                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.984009                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed         1832                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            2                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups         1773                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits         1755                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses           18                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted            7                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts       107659                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps       107670                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    67.196500                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.014882                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass           30      0.03%      0.03% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu        87615     81.37%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     81.40% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead        16254     15.10%     96.50% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite         3771      3.50%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total       107670                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps          253                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions        85637                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions        16520                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions         3895                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1446861600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1446861600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON   1446861600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts       107659                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps       107670                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls            1                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               0                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   nan                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc                   nan                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          nan                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc          nan                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate          nan                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate          nan                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate          nan                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1446861600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1446861600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON   1446861600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles        6965760                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles         268548                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              0                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------
