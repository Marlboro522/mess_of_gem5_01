
---------- Begin Simulation Statistics ----------
simSeconds                                   0.002292                       # Number of seconds simulated (Second)
simTicks                                   2291630000                       # Number of ticks simulated (Tick)
finalTick                                  2291630000                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.35                       # Real time elapsed on the host (Second)
hostTickRate                               6486051057                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158872                       # Number of bytes of host memory used (Byte)
simInsts                                       183807                       # Number of instructions simulated (Count)
simOps                                         183813                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   520157                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     520170                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq        79355                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp        79357                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq        14635                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp        14635                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::LoadLockedReq            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondReq            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondResp            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq           14                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp           14                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port       100489                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total       100489                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        87530                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total        87530                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total       188019                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port      3215616                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total      3215616                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port       236264                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total       236264                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      3451880                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        94010                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        94010    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        94010                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED   2291630000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED   2291630000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     21732400                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy     22885600                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy     16387000                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples     50245.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples     25570.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.003159912500                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds           25                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds           25                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState         165928                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           375                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  79358                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                 14652                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                79358                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts               14652                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ              3974                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts            14221                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.47                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.38                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0             7280                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1             5012                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2             3660                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3            13161                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            50245                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0              20                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1            3004                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2              30                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3           11598                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              48305                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1              25005                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2               2074                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                26                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                25                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples           25                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean  2957.920000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean  1030.081957                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev  9212.128567                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-2047           24     96.00%     96.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::45056-47103            1      4.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total           25                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples           25                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16           25    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total           25                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ             254336                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            3352912                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           98932                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1463112282.52379322                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         43171018.00901542                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap               2291628800                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 24376.44                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst      3215680                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data       111404                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data         3089                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1403228269.834135770798                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 48613432.360372312367                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 1347948.839908711379                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst        50245                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data        29113                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data        14652                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst   1148530350                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data    678746600                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data  58900593800                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     22858.60                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     23314.21                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data   4019969.55                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst      3215616                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data       137232                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      3352848                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst      3215616                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total      3215616                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data        98832                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total        98832                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst        50244                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data        29113                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        79357                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data        14638                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total        14638                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1403200342                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data     59884013                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1463084355                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1403200342                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1403200342                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     43127381                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     43127381                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1403200342                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data    103011394                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1506211736                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           75384                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            400                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0        18804                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1691                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         2603                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          622                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          395                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          179                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6         5060                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7           15                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8           72                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         7928                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10          288                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         2585                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13        15370                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14        18592                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15         1180                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5           53                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6           17                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8           15                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9           45                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           45                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11           96                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          413826950                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        376920000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat    1827276950                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            5489.59                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      24239.59                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits          66736                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           369                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        88.53                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        92.25                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         8675                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   558.869395                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   326.833623                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   433.186210                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127         2406     27.73%     27.73% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255          995     11.47%     39.20% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383          706      8.14%     47.34% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511          112      1.29%     48.63% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639          337      3.88%     52.52% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767          256      2.95%     55.47% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           46      0.53%     56.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023          144      1.66%     57.66% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         3673     42.34%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         8675                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead          4824576                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten         25600                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2105.303212                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW          11.171088                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              16.53                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          16.45                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.09                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          88.55                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED   2291630000                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy     15358140                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy      8151660                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy    209694660                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy       370620                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 180704160.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy    681938880                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy    305721600                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy   1401939720                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   611.765302                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE    785979250                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF     76440000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT   1429210750                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy     46609920                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy     24769965                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy    328547100                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy      1717380                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 180704160.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy   1018933140                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy     21936960                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy   1623218625                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   708.324915                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE     46503900                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF     76440000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT   2168686100                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED   2291630000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles        11458150                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             62.337941                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.016042                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups        38895                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted        24152                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect          468                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups        14855                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates          401                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits        14134                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.951464                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed         4998                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            3                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups         1791                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits         1748                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses           43                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted           24                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts       183807                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps       183813                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    62.337941                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.016042                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass           33      0.02%      0.02% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu       134159     72.99%     73.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult         1004      0.55%     73.55% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            3      0.00%     73.55% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd         1000      0.54%     74.10% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp            0      0.00%     74.10% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt         1000      0.54%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     74.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead        29971     16.31%     90.95% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite        12630      6.87%     97.82% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead         2000      1.09%     98.90% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite         2013      1.10%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total       183813                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps         1331                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions       136163                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions         2000                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions        33059                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions        15144                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   2291630000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   2291630000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON   2291630000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts       183807                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps       183813                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls           12                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               2                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   inf                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc              0.000000                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          inf                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc     0.000000                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   2291630000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   2291630000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON   2291630000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles       10995423                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles         462727                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              2                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.027203                       # Number of seconds simulated (Second)
simTicks                                  27203014800                       # Number of ticks simulated (Tick)
finalTick                                 29494644800                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      4.04                       # Real time elapsed on the host (Second)
hostTickRate                               6729406224                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158872                       # Number of bytes of host memory used (Byte)
simInsts                                      2028658                       # Number of instructions simulated (Count)
simOps                                        2028664                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   501838                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     501839                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq      1155306                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp      1155306                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq        46007                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp        46007                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq          993                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp          993                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port      1168652                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total      1168652                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port      1235960                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total      1235960                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total      2404612                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port     37396864                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total     37396864                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port      4870868                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total      4870868                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total     42267732                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples      1202306                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0      1202306    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total      1202306                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED  27203014800                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED  27203014800                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy    249861200                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy    264656350                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy    286186600                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples    584326.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples    556436.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.004465615350                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds          218                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds          218                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState        2327788                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState          3270                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                1155306                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                 47000                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts              1155306                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts               47000                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ             18021                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts            43523                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.63                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.56                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0             2994                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1             2000                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2             8993                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3           556993                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6           584326                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               7                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2            1993                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3           45000                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0             664198                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1             469659                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2               3428                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17               168                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18               218                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19               218                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20               217                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21               217                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22               217                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23               217                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24               224                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25               217                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26               219                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27               221                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28               218                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29               244                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30               222                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31               218                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32               222                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples          218                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean  5223.376147                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean  1930.808438                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev  6074.772272                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-1023          110     50.46%     50.46% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::1024-2047            1      0.46%     50.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::2048-3071            2      0.92%     51.83% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::3072-4095            9      4.13%     55.96% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::4096-5119           16      7.34%     63.30% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::5120-6143            4      1.83%     65.14% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::6144-7167            8      3.67%     68.81% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::7168-8191            7      3.21%     72.02% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::8192-9215            5      2.29%     74.31% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::9216-10239            7      3.21%     77.52% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::10240-11263            6      2.75%     80.28% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::11264-12287            5      2.29%     82.57% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::12288-13311            5      2.29%     84.86% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::13312-14335            7      3.21%     88.07% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::14336-15359            7      3.21%     91.28% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::15360-16383            2      0.92%     92.20% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16384-17407            6      2.75%     94.95% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::17408-18431            3      1.38%     96.33% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::18432-19455            3      1.38%     97.71% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::19456-20479            1      0.46%     98.17% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::20480-21503            4      1.83%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total          218                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples          218                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16          218    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total          218                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ            1153344                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys           41895774                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys          367986                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1540115105.18312097                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         13527397.70593368                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap              27203014800                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 22625.70                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst     37396864                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data      4358732                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data        27382                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1374732332.976563930511                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 160229740.418330401182                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 1006579.608963047736                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst       584326                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data       570980                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data        47000                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst  13754595250                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data  13344152400                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data 706045833700                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     23539.25                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     23370.61                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data  15022251.78                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst     37396864                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data      4498910                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total     41895774                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst     37396864                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total     37396864                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data       364014                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total       364014                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst       584326                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data       570980                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total      1155306                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data        46007                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total        46007                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1374732333                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data    165382772                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1540115105                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1374732333                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1374732333                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     13381384                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     13381384                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1374732333                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data    178764157                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1553496490                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts         1137285                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts           3488                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0       545160                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1        38008                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2        28102                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5        13599                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6         1000                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8         5987                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9        25423                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10         8010                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11        11523                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         1024                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13       201454                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14       162521                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15        95474                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          334                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          112                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9          684                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10          100                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11          245                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12           86                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13          842                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14          598                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15          486                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat         5774653900                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat       5686425000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat   27098747650                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            5077.58                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      23827.58                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits        1008831                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits          3170                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        88.71                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        90.88                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples       128775                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   566.968185                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   320.065255                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   438.100771                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127        42879     33.30%     33.30% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255         8214      6.38%     39.68% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383         5717      4.44%     44.12% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511         4235      3.29%     47.40% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639         3449      2.68%     50.08% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767         3716      2.89%     52.97% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895         2965      2.30%     55.27% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023         3237      2.51%     57.78% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151        54363     42.22%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total       128775                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead         72786240                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten        223232                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2675.668140                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW           8.206149                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              20.97                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          20.90                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.06                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          88.71                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED  27203014800                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy    620044740                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy    329569185                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy   4468704660                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      2333340                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 2147552160.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy  11752973640                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy    548716800                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy  19869894525                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   730.429869                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE    414092200                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF    908440000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT  25880482600                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy    299387340                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy    159131940                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy   3651510240                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy     15874020                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 2147552160.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy  12308452320                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy     80945280                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy  18662853300                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   686.058271                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE    109862150                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF    908440000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT  26184712650                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED  27203014800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles       136015074                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             73.726861                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.013564                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups       566112                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted       547047                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect         1045                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups       276562                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates         1023                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits       276523                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.999859                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed         7025                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            1                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts      1844851                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps      1844851                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    73.726861                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.013564                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu       979390     53.09%     53.09% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult            0      0.00%     53.09% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            0      0.00%     53.09% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd            0      0.00%     53.09% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp       247499     13.42%     66.50% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt            0      0.00%     66.50% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     66.50% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     66.50% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     66.50% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc         1000      0.05%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     66.56% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead       321448     17.42%     83.98% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite        44015      2.39%     86.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead       249499     13.52%     99.89% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite         2000      0.11%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total      1844851                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps         3140                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions       976736                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions       248530                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions       571151                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions        46064                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED  27203014800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED  27203014800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON  27203014800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts      1844851                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps      1844851                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               0                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   nan                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc                   nan                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          nan                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc          nan                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate          nan                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate          nan                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate          nan                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED  27203014800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED  27203014800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON  27203014800                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles      129903440                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles        6111634                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              0                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.001453                       # Number of seconds simulated (Second)
simTicks                                   1453324600                       # Number of ticks simulated (Tick)
finalTick                                 30947969400                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.20                       # Real time elapsed on the host (Second)
hostTickRate                               7259443954                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158872                       # Number of bytes of host memory used (Byte)
simInsts                                      2136435                       # Number of instructions simulated (Count)
simOps                                        2136452                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                 10668291                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                   10668198                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq        47810                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp        47815                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq         3782                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp         3782                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::LoadLockedReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondResp            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port        62972                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total        62972                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        40242                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total        40242                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total       103214                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port      2015104                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total      2015104                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        96348                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total        96348                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      2111452                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        51607                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        51607    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        51607                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED   1453324600                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED   1453324600                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     11079800                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy     14329150                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy      8575300                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples     31486.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples     16319.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.003092557950                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            2                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            2                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState          99673                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState            30                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  47815                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                  3792                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                47815                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                3792                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                47                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts             3755                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.51                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.96                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0             7169                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                1                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2             3580                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3             5579                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            31486                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               3                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               1                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2              29                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3            3759                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              29811                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1              17006                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                951                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples            2                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean 23771.500000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean  3452.148896                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev 33261.595880                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-2047            1     50.00%     50.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::47104-49151            1     50.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total            2                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples            2                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16            2    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total            2                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ               3008                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            2081227                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           30193                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1432045532.01672912                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         20775124.84134652                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap               1453325000                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 28161.39                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst      2015104                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data        65759                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data          242                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1386547781.548595666885                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 45247290.247478090227                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 166514.762084120797                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst        31486                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data        16329                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data         3792                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst    744751250                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data    462708500                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data  21453327900                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     23653.41                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     28336.61                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data   5657523.18                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst      2015104                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data        66123                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      2081227                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst      2015104                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total      2015104                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data        30161                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total        30161                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst        31486                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data        16329                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        47815                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data         3787                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total         3787                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1386547782                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data     45497750                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1432045532                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1386547782                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1386547782                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     20753106                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     20753106                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1386547782                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data     66250857                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1452798638                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           47768                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts             32                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0         1342                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1434                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         1396                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          330                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5           34                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           48                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8          178                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         5416                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10           48                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11           10                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         2461                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13        15362                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14        18529                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15         1180                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0           11                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            8                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            3                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          311809750                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        238840000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat    1207459750                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            6527.59                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      25277.59                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits          41149                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits            27                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        86.14                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        84.38                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         6618                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   461.741916                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   250.885103                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   423.660883                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127         2351     35.52%     35.52% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255          902     13.63%     49.15% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383          619      9.35%     58.51% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           42      0.63%     59.14% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639          258      3.90%     63.04% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767          140      2.12%     65.16% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           51      0.77%     65.93% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023          141      2.13%     68.06% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         2114     31.94%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         6618                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead          3057152                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten          2048                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2103.557595                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW           1.409183                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              16.45                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          16.43                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.01                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          86.14                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED   1453324600                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy      2663220                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy      1404150                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy     32729760                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy        57420                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 114323040.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy    303492510                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy    302504160                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy    757174260                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   520.994594                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE    780723000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF     48360000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT    624241600                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy     44632140                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy     23711160                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy    308333760                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       109620                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 114323040.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy    659800080                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      2455680                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy   1153365480                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   793.604870                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE       398600                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF     48360000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT   1404566000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED   1453324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles         7266623                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             67.422762                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.014832                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups        28140                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted        19978                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect          127                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups         9984                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates           97                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits         9798                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.981370                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed         1839                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            2                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups         1773                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits         1755                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses           18                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted            7                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts       107777                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps       107788                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    67.422762                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.014832                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass           30      0.03%      0.03% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu        87683     81.35%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     81.38% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead        16288     15.11%     96.49% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite         3787      3.51%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total       107788                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps          315                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions        85864                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions        16624                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions         3966                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1453324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1453324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON   1453324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts       107777                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps       107788                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls            1                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               0                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   nan                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc                   nan                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          nan                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc          nan                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate          nan                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate          nan                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate          nan                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1453324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1453324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON   1453324600                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles        7003787                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles         262836                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              0                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------
