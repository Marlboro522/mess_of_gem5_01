
---------- Begin Simulation Statistics ----------
simSeconds                                   0.001624                       # Number of seconds simulated (Second)
simTicks                                   1623843000                       # Number of ticks simulated (Tick)
finalTick                                  1623843000                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.22                       # Real time elapsed on the host (Second)
hostTickRate                               7432508041                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158876                       # Number of bytes of host memory used (Byte)
simInsts                                       114099                       # Number of instructions simulated (Count)
simOps                                         114105                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   522089                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     522110                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq        52649                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp        52651                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq         4777                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp         4777                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::LoadLockedReq            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondReq            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondResp            3                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq           14                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp           14                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port        70529                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total        70529                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        44362                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total        44362                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total       114891                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port      2256896                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total      2256896                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port       110697                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total       110697                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      2367593                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        57446                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        57446    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        57446                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED   1623843000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED   1623843000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     12448000                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy     15988050                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy      9224350                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples     35265.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples     16502.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.003097874050                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            8                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            8                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState         108384                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState           120                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  52652                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                  4794                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                52652                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                4794                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ              1040                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts             4639                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.46                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.85                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0             7291                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1               67                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2             3721                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3             6308                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            35265                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0              20                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1              34                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2              46                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3            4694                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              33643                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1              16974                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                995                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                10                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                10                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                10                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples            8                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean  6351.875000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean   492.767803                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev 17184.283704                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-2047            7     87.50%     87.50% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::47104-49151            1     12.50%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total            8                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples            8                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16            8    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total            8                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ              66560                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            2329733                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           37824                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1434703354.94256520                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         23292892.23157657                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap               1623841800                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 28267.27                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst      2256960                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data        64525                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data          969                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1389888061.838490486145                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 39735984.328534223139                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 596732.565894609201                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst        35265                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data        17387                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data         4794                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst    825039900                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data    474992050                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data  23115134700                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     23395.43                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     27318.80                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data   4821680.16                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst      2256896                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data        72773                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      2329669                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst      2256896                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total      2256896                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data        37724                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total        37724                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst        35264                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data        17387                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        52651                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data         4780                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total         4780                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1389848649                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data     44815293                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1434663942                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1389848649                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1389848649                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     23231310                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     23231310                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1389848649                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data     68046603                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1457895252                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           51612                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts            128                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0         1591                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1911                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         1767                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          725                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          409                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          193                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6          105                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7           17                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8           74                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         4962                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10          378                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            4                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         2364                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13         1382                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14        34430                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15         1300                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5           45                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8           15                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9           22                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10           40                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          332306950                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        258060000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat    1300031950                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            6438.56                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      25188.56                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits          45081                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits           119                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        87.35                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        92.97                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         6536                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   506.261934                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   264.863116                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   438.137517                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127         2679     40.99%     40.99% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255          427      6.53%     47.52% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383           84      1.29%     48.81% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511          104      1.59%     50.40% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639          344      5.26%     55.66% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767          396      6.06%     61.72% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           16      0.24%     61.96% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023           50      0.76%     62.73% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         2436     37.27%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         6536                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead          3303168                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten          8192                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2034.167096                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW           5.044823                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              15.93                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          15.89                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.04                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          87.36                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED   1623843000                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy      4305420                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy      2277000                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy     47966520                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy       266220                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 127845120.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy    363372720                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy    317557920                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy    863590920                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   531.819221                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE    819459150                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF     54080000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT    750303850                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy     42390180                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy     22527120                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy    320543160                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy       401940                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 127845120.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy    729828000                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      8964000                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy   1252499520                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   771.318114                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE     15517800                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF     54080000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT   1554245200                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED   1623843000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles         8119215                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             71.159388                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.014053                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups        30027                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted        21190                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect          465                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups        10933                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates          400                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits        10217                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.934510                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed         2031                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            5                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups         1792                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits         1750                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses           42                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted           24                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts       114099                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps       114105                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    71.159388                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.014053                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass           33      0.03%      0.03% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu        91957     80.59%     80.62% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult           14      0.01%     80.63% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            3      0.00%     80.63% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd           10      0.01%     80.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp            0      0.00%     80.64% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt           10      0.01%     80.65% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     80.65% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     80.65% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     80.65% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc           10      0.01%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     80.66% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead        17266     15.13%     95.79% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite         4750      4.16%     99.95% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead           20      0.02%     99.97% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite           32      0.03%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total       114105                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps         1347                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions        92766                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions           39                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions        18420                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions         5290                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1623843000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1623843000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON   1623843000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts       114099                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps       114105                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls           12                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               2                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   inf                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc              0.000000                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          inf                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc     0.000000                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1623843000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1623843000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON   1623843000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles        7818347                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles         300868                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              2                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.000017                       # Number of seconds simulated (Second)
simTicks                                     17344000                       # Number of ticks simulated (Tick)
finalTick                                  1641187000                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.02                       # Real time elapsed on the host (Second)
hostTickRate                                945343410                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158876                       # Number of bytes of host memory used (Byte)
simInsts                                       115240                       # Number of instructions simulated (Count)
simOps                                         115246                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  6269457                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    6268858                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq          706                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp          706                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq          182                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp          182                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port          624                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total          624                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port         1152                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total         1152                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total         1776                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port        19968                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total        19968                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port         3840                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total         3840                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total        23808                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples          888                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0          888    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total          888                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED     17344000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED     17344000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       214000                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy       143800                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       222100                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples       312.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples       380.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000541300                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           1570                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                    706                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                   182                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                  706                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                 182                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                14                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts              182                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.56                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 27.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2              130                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3              264                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6              312                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2              62                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3             120                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                442                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                242                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  8                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                896                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys              22600                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys            1208                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1303044280.44280457                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         69649446.49446495                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap                 17344000                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 19531.53                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst        19968                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data         2560                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1151291512.915129184723                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 147601476.014760166407                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst          312                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data          394                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data          182                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst      6871600                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data      8507300                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     22024.36                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     21592.13                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data         0.00                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst        19968                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data         2632                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total        22600                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst        19968                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total        19968                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data         1208                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total         1208                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst          312                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data          394                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total          706                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data          182                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total          182                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1151291513                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data    151752768                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1303044280                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1151291513                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1151291513                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     69649446                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     69649446                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1151291513                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data    221402214                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1372693727                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts             692                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          312                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9          254                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11          124                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat            2403900                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat          3460000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      15378900                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            3473.84                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      22223.84                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits            642                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        92.77                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples           51                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   903.529412                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   797.285575                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   279.159478                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127            2      3.92%      3.92% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255            2      3.92%      7.84% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383            1      1.96%      9.80% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639            4      7.84%     17.65% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           42     82.35%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total           51                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead            44288                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten             0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2553.505535                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              19.95                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          19.95                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.77                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED     17344000                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       149940                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy        87285                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy      2227680                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy      7170030                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy       622080                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy     11486295                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   662.263319                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE      1376900                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     15447100                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       207060                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       106260                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy      2713200                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 1229280.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy      7862010                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy        39360                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy     12157170                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   700.943842                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE        19750                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF       520000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     16804250                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED     17344000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles           86720                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             76.003506                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.013157                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups          134                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted           47                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect           14                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups          104                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates           12                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits           78                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.750000                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed           26                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            1                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts         1141                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps         1141                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    76.003506                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.013157                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass            0      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu          493     43.21%     43.21% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult            0      0.00%     43.21% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            0      0.00%     43.21% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd            0      0.00%     43.21% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp            0      0.00%     43.21% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt            0      0.00%     43.21% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     43.21% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     43.21% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     43.21% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc           10      0.88%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     44.08% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead          446     39.09%     83.17% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite          172     15.07%     98.25% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead           10      0.88%     99.12% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite           10      0.88%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total         1141                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps           43                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions          567                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions           13                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions          559                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions          203                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED     17344000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED     17344000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON     17344000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts         1141                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps         1141                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls            0                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               0                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   nan                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc                   nan                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          nan                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc          nan                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate          nan                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate          nan                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate          nan                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED     17344000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED     17344000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON     17344000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles          83313                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles           3407                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              0                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------

---------- Begin Simulation Statistics ----------
simSeconds                                   0.001528                       # Number of seconds simulated (Second)
simTicks                                   1527833400                       # Number of ticks simulated (Tick)
finalTick                                  3169020400                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                      0.21                       # Real time elapsed on the host (Second)
hostTickRate                               7253106791                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1158876                       # Number of bytes of host memory used (Byte)
simInsts                                       223189                       # Number of instructions simulated (Count)
simOps                                         223206                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                  1059254                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                    1059321                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq        49600                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp        49605                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq         3798                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp         3798                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::LoadLockedReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondResp            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp            5                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port        66506                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.fetch1.icache_port::total        66506                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        40320                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores0.core.execute.dcache_port::total        40320                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total       106826                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::board.memory.mem_ctrl.port      2128192                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.fetch1.icache_port::total      2128192                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::board.memory.mem_ctrl.port        96569                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores0.core.execute.dcache_port::total        96569                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total      2224761                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples        53413                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0        53413    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total        53413                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED   1527833400                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED   1527833400                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy     11444200                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy     15071200                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy      8595400                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            200                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.inst::samples     33253.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores0.core.data::samples     16319.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.003176587550                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            1                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            1                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState         103280                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState            15                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                  49605                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                  3808                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                49605                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                3808                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                53                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts             3788                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.49                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 21.09                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0             7174                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                5                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2             3580                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3             5593                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6            33253                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               3                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               5                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2              31                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3            3769                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0              31810                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1              16805                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                937                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples            1                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean         1759                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean  1759.000000                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev          nan                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::1728-1791            1    100.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total            1                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples            1                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean           16                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.000000                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev          nan                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16            1    100.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total            1                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ               3392                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys            2194440                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys           30289                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         1436308435.19980645                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         19824805.50562646                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap               1527833400                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 28604.15                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.inst      2128128                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores0.core.data        65850                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores0.core.data          114                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.inst 1392905797.189667463303                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores0.core.data 43100249.019297517836                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores0.core.data 74615.465272587957                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.inst        33253                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores0.core.data        16352                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores0.core.data         3808                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.inst    779535250                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores0.core.data    471164800                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores0.core.data  19098696800                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.inst     23442.55                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores0.core.data     28813.89                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores0.core.data   5015414.08                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.inst      2128192                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores0.core.data        66248                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total      2194440                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores0.core.inst      2128192                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total      2128192                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores0.core.data        30257                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total        30257                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.inst        33253                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores0.core.data        16352                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total        49605                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores0.core.data         3803                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total         3803                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.inst   1392947687                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores0.core.data     43360749                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   1436308435                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores0.core.inst   1392947687                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total   1392947687                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores0.core.data     19803861                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     19803861                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.inst   1392947687                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores0.core.data     63164609                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   1456112296                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts           49551                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts             16                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0         1225                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1         1441                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2         1388                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          452                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5           25                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6           49                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8          177                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9         5439                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10           50                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11            4                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12         2242                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13         1384                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14        34375                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15         1300                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            3                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat          321618800                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat        247755000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat    1250700050                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            6490.66                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      25240.66                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits          43340                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits            16                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        87.47                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate       100.00                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples         6214                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   510.609591                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   264.748813                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   440.681763                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127         2608     41.97%     41.97% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255          351      5.65%     47.62% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383           62      1.00%     48.62% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           65      1.05%     49.66% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639          247      3.97%     53.64% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767          407      6.55%     60.19% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895           47      0.76%     60.94% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023          128      2.06%     63.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151         2299     37.00%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total         6214                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesRead          3171264                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.bytesWritten          1024                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        2075.660867                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW           0.670230                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              16.22                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          16.22                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.01                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          87.47                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED   1527833400                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy      2456160                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy      1309275                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy     32701200                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy        62640                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 121084080.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy    319583610                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy    317658240                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy    794855205                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   520.249921                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE    820333050                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF     50962900                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT    656537450                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy     41890380                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy     22272855                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy    321092940                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy        20880                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 121084080.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy    693404430                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy      2861760                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy   1202627325                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   787.145591                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF     50962900                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT   1476870500                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED   1527833400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.numCycles         7639167                       # Number of cpu cycles simulated (Cycle)
board.processor.cores0.core.cpi             70.766445                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores0.core.ipc              0.014131                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores0.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores0.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores0.core.branchPred.lookups        28138                       # Number of BP lookups (Count)
board.processor.cores0.core.branchPred.condPredicted        19940                       # Number of conditional branches predicted (Count)
board.processor.cores0.core.branchPred.condIncorrect          115                       # Number of conditional branches incorrect (Count)
board.processor.cores0.core.branchPred.BTBLookups         9983                       # Number of BTB lookups (Count)
board.processor.cores0.core.branchPred.BTBUpdates           90                       # Number of BTB updates (Count)
board.processor.cores0.core.branchPred.BTBHits         9809                       # Number of BTB hits (Count)
board.processor.cores0.core.branchPred.BTBHitRatio     0.982570                       # BTB Hit Ratio (Ratio)
board.processor.cores0.core.branchPred.RASUsed         1846                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores0.core.branchPred.RASIncorrect            2                       # Number of incorrect RAS predictions. (Count)
board.processor.cores0.core.branchPred.indirectLookups         1776                       # Number of indirect predictor lookups. (Count)
board.processor.cores0.core.branchPred.indirectHits         1757                       # Number of indirect target hits. (Count)
board.processor.cores0.core.branchPred.indirectMisses           19                       # Number of indirect misses. (Count)
board.processor.cores0.core.branchPred.indirectMispredicted            7                       # Number of mispredicted indirect branches. (Count)
board.processor.cores0.core.commitStats0.numInsts       107949                       # Number of instructions committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numOps       107960                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores0.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores0.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores0.core.commitStats0.cpi    70.766445                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores0.core.commitStats0.ipc     0.014131                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores0.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores0.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores0.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores0.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores0.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores0.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores0.core.commitStats0.committedInstType::No_OpClass           30      0.03%      0.03% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntAlu        87814     81.34%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntMult            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IntDiv            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatAdd            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCmp            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatCvt            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMult            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatDiv            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMisc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAdd            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAlu            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCmp            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdCvt            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMisc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMult            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShift            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdDiv            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAes            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::Matrix            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixMov            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MatrixOP            0      0.00%     81.37% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemRead        16313     15.11%     96.48% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::MemWrite         3803      3.52%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::FloatMemWrite            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatArith            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatConvert            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorFloatReduce            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorMisc            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorIntegerExtension            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::VectorConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores0.core.commitStats0.committedInstType::total       107960                       # Class of committed instruction. (Count)
board.processor.cores0.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores0.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores0.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores0.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores0.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores0.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores0.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores0.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores0.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores0.core.executeStats0.numDiscardedOps          288                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores0.core.fetch2.intInstructions        85907                       # Number of integer instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.loadInstructions        16637                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.storeInstructions         3944                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores0.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores0.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores0.core.fetchStats0.fetchRate            0                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores0.core.fetchStats0.branchRate            0                       # Number of branch fetches per cycle (Ratio)
board.processor.cores0.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores0.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1527833400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores0.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores0.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores0.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores0.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores0.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores0.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores0.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores0.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores0.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1527833400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.power_state.pwrStateResidencyTicks::ON   1527833400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores0.core.thread_0.numInsts       107949                       # Number of Instructions committed (Count)
board.processor.cores0.core.thread_0.numOps       107960                       # Number of Ops committed (Count)
board.processor.cores0.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores0.core.workload.numSyscalls            1                       # Number of system calls (Count)
board.processor.cores1.core.numCycles               0                       # Number of cpu cycles simulated (Cycle)
board.processor.cores1.core.cpi                   nan                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores1.core.ipc                   nan                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores1.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores1.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores1.core.branchPred.lookups            0                       # Number of BP lookups (Count)
board.processor.cores1.core.branchPred.condPredicted            0                       # Number of conditional branches predicted (Count)
board.processor.cores1.core.branchPred.condIncorrect            0                       # Number of conditional branches incorrect (Count)
board.processor.cores1.core.branchPred.BTBLookups            0                       # Number of BTB lookups (Count)
board.processor.cores1.core.branchPred.BTBUpdates            0                       # Number of BTB updates (Count)
board.processor.cores1.core.branchPred.BTBHits            0                       # Number of BTB hits (Count)
board.processor.cores1.core.branchPred.BTBHitRatio          nan                       # BTB Hit Ratio (Ratio)
board.processor.cores1.core.branchPred.RASUsed            0                       # Number of times the RAS was used to get a target. (Count)
board.processor.cores1.core.branchPred.RASIncorrect            0                       # Number of incorrect RAS predictions. (Count)
board.processor.cores1.core.branchPred.indirectLookups            0                       # Number of indirect predictor lookups. (Count)
board.processor.cores1.core.branchPred.indirectHits            0                       # Number of indirect target hits. (Count)
board.processor.cores1.core.branchPred.indirectMisses            0                       # Number of indirect misses. (Count)
board.processor.cores1.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores1.core.commitStats0.numOps            0                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores1.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores1.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores1.core.commitStats0.cpi          nan                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores1.core.commitStats0.ipc          nan                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores1.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores1.core.commitStats0.numFpInsts            0                       # Number of float instructions (Count)
board.processor.cores1.core.commitStats0.numIntInsts            0                       # Number of integer instructions (Count)
board.processor.cores1.core.commitStats0.numLoadInsts            0                       # Number of load instructions (Count)
board.processor.cores1.core.commitStats0.numStoreInsts            0                       # Number of store instructions (Count)
board.processor.cores1.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores1.core.commitStats0.committedInstType::No_OpClass            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IntDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAddAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShift            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShiftAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatCvt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatDiv            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMult            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatSqrt            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceAdd            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdFloatReduceCmp            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAes            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdAesMix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha1Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdSha256Hash2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma2            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdShaSigma3            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::SimdPredAlu            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::Matrix            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixMov            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MatrixOP            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::MemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemRead            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::FloatMemWrite            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::IprAccess            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::InstPrefetch            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideMaskStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorStridedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIndexedStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorUnitStrideFaultOnlyFirstLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterLoad            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorWholeRegisterStore            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatArith            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatConvert            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorFloatReduce            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorMisc            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorIntegerExtension            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::VectorConfig            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.commitStats0.committedInstType::total            0                       # Class of committed instruction. (Count)
board.processor.cores1.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores1.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores1.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores1.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores1.core.executeStats0.numStoreInsts            0                       # Number of stores executed (Count)
board.processor.cores1.core.executeStats0.instRate          nan                       # Inst execution rate ((Count/Cycle))
board.processor.cores1.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores1.core.executeStats0.numMemRefs            0                       # Number of memory refs (Count)
board.processor.cores1.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores1.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores1.core.fetch2.intInstructions            0                       # Number of integer instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.fpInstructions            0                       # Number of floating point instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.vecInstructions            0                       # Number of SIMD instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.loadInstructions            0                       # Number of memory load instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.storeInstructions            0                       # Number of memory store instructions successfully decoded (Count)
board.processor.cores1.core.fetch2.amoInstructions            0                       # Number of memory atomic instructions successfully decoded (Count)
board.processor.cores1.core.fetchStats0.numInsts            0                       # Number of instructions fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores1.core.fetchStats0.fetchRate          nan                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores1.core.fetchStats0.branchRate          nan                       # Number of branch fetches per cycle (Ratio)
board.processor.cores1.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores1.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.dtb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1527833400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores1.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores1.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores1.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores1.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores1.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores1.core.mmu.itb.hits            0                       # Total TLB (read and write) hits (Count)
board.processor.cores1.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores1.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores1.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   1527833400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.power_state.pwrStateResidencyTicks::ON   1527833400                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores1.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores1.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores1.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)
board.processor.cores0.core.idleCycles        7359271                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores0.core.tickCycles         279896                       # Number of cycles that the object actually ticked (Unspecified)
board.processor.cores1.core.idleCycles              0                       # Total number of cycles that the object has spent stopped (Unspecified)
board.processor.cores1.core.tickCycles              0                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------
